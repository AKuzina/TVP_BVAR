% !Rnw root = Main.Rnw

\subsection{Данные}
<<data transformation, echo = FALSE>>=

TransformData <- function(x, season, center = TRUE, diff = TRUE){
  # Transforms zoo data 
  # Number of difference periods is chosen wih unit root test (ADF)
  # Aftarwards data is scaled 
  # 
  # Returns transformed data and with ndiff, mean and sd in attributes
  start <- start(x)
  dates <- index(x)
  

  if (diff == TRUE){
    n.dif <- ndiffs(x, test = 'adf')
    if (n.dif > 0){
      x <- c(rep(NA, n.dif), diff(x, differences = n.dif))
      if (season){
        kFreq = 12  
        x <- zooreg(x, start = start, frequency = kFreq)
      } else {
        x <- zoo(x, order.by = dates)
      }
    }
  } else {
    n.dif = NA
  }
  
  x <- scale(x, center = center)
  attr(x, 'n.dif') <- n.dif
  return(x)
}


# diffinv(b, xi = a[1])
# x = matrix(sample(1:12), ncol= 3)
# xs = scale(x, center = TRUE, scale = TRUE)
# x.orig = t(apply(xs, 1, function(r)r*attr(xs,'scaled:scale') + attr(xs, 'scaled:center')))

ReverseDataTransform <- function(x, center, scale){
  temp <- as.vector(apply(t(x), 1, function(r)r*scale + center))
  return(temp)
}
@
<<download macro, echo = FALSE>>=
# Список нужных рядов
# так как с софиста скачивается целая таблица, нужно указывать столбец
macro.names <- data.frame(name = c('Production', 'CPI_M_CHI', 'Interbank',
                                   'UNEMPL_M_SH', 'M2_M', 'RDEXRM_M', 'Wage', 
                                   'RTS_M', 'Brent'), 
                          source = c('csv', 'SOPHIST', 'csv', rep('SOPHIST',3), 
                                     'csv', 'SOPHIST', 'csv'),
                          column = c(rep(1, 4), 2, 2, 1, 3, 1))

Nm <- nrow(macro.names) # Количество рядов
macro.raw <- array(dim = c(205,9), dimnames = list(NULL, macro.names$name))
start <- rep(NA, Nm)
end <- rep(NA, Nm)

for (i in 1:nrow(macro.names)){
  if (macro.names$source[i] == 'SOPHIST'){ 
    # Данные с сайта sophist
    temp <- 
      sophisthse(as.character(macro.names$name[i]), output = "zoo")[, macro.names$column[i]]
  } else{
    temp <- read.csv(paste('./Data/',macro.names$name[i], 
                                     '.csv',sep=''), sep = ';')[,2] %>% 
            zooreg(start = as.yearmon("1994-12"), frequency = 12)
  }
  start[i] <- which(index(temp) == "Jan 2000")
  end[i] <- which(index(temp) == "Jan 2017")
  macro.raw[,i] <- temp[start[i]:end[i]]
}

# Стандартизируем
macro <- array(dim = c(204,9), dimnames = list(NULL, macro.names$name))
attr(macro, "n.dif") <- rep(NA, 9)
attr(macro, "center") <- rep(NA, 9)
attr(macro, "scale") <- rep(NA, 9)

for (i in 1:ncol(macro.raw)){
  temp <- TransformData(macro.raw[,i], season = TRUE, center = TRUE)
  macro[,i] <- temp[-1]
  attr(macro, 'n.dif')[i] <- attr(temp, 'n.dif')
  attr(macro, 'center')[i] <- attr(temp, 'scaled:center')
  attr(macro, 'scale')[i] <- attr(temp, 'scaled:scale')
}

macro.zoo <- zooreg(macro, start = as.yearmon("2000-2"), frequency = 12)
macro <- ts(macro, start = c(2000,2), frequency = 12)

m.names <- c("Производство", "ИПЦ", "Процентная ставка", 
             "Безработица", "М2", "Курс доллара", "Зарплата", 
             "Индекс РТС", "Нефть")
@
Рассмотрим данные, которые используются в данной работе для построения прогнозов. Всего было взято 33 временных ряда, список которых подробно представлен в Приложении в таблицах \ref{table:macro} и \ref{table:fin}. Ряды условно делятся на 2 группы --- макроэкономические и финансовые.
Макроэкономический набор данных состоит из 9 временных рядов. Каждый временной ряд представляет собой ежемесячные наблюдения с января 2000 года по январь 2017 года включительно. Из 204 имеющихся наблюдений 180 вошли в тренировочную выборку, а оставшиеся 24 использовались для проверки качества полученных прогнозов. 

Для набора были выбраны показатели, оказывающее непосредственное влияние на российскую экономику. В основном данный набор состоит из макроэкономических показателей, таких как индекс промышленного производства, инфляция (индекс потребительских цен), денежный агрегат М2, межбанковская процентная ставка, безработица и номинальная заработная плата; помимо этого есть важные финансовые показатели: индекс РТС, характеризующий состояние финансовых рынков страны, курс доллара, а также цена на нефть, которая, в силу высокой зависимости экономики страны от ее экспорта, может оказывать достаточно сильное влияние на макроэкономические показатели\footnote{например, данный вопрос подробно обсуждается в статье Kalcheva, Oomes "Diagnosing Dutch Disease: Does Russia Have the Symptoms?"}. На рисунке \ref{fig:raw.macro.plot} показаны все ряды, включенные в макроэкономический набор.
%%%%%%%%%%%%%% РИСУНОК 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<raw mplots, echo = FALSE>>=
#colnames(macro.raw) <- m.names
df.macro.raw <- data.frame(macro.raw[-1,])
df.macro.raw$date <- as.yearmon(index(macro)) 
df.macro.raw.melt <- melt(df.macro.raw, id.vars = 'date')
@
<<raw.macro.plot, echo = FALSE, fig.height=7, fig.width=12, fig.cap='Макроэкономические данные до преобразований', fig.lp='fig:'>>=
ggplot(df.macro.raw.melt, aes(x = date, y = value)) + 
    geom_line() + 
    facet_wrap(~ variable, scales = 'free_y', ncol = 3)+
    ylab(" ")+
    xlab("Дата")+
    theme(axis.title.x = element_text(size=22),
          axis.title.y = element_text(size=22),
          plot.title = element_text(size = 22))
@

Прежде чем строить модели с использованием описанных выше данных, они были подвержены некоторым преобразованиям. Для начала был проведен тест на единичный корень и ряды, для которых гипотеза об отсутствии единичного корня отвергалась (процедура теста подробно описана в разделе \ref{sec:arima}), были заменены на их первую разность. В таблице \ref{table:macro} показан порядок разности, использовавшийся для каждого из рядов. Заметим, что в результате проверки рядов на стационарность, мы везде перешли от абсолютных значений к приросту показателя и в дальнейшем работали именно с приростами.   Далее данные были приведены к единому масштабу посредством следующего преобразования:
\begin{equation}\label{scale}
\tilde{y}_t = \frac{y_t - \bar{y}}{sd(y)}
\end{equation}
Это было сделано для того, чтобы упростить вычисления при построении многомерных моделей. Прогнозы, полученные на отмасштабированных данных, возвращались к исходному масштабу для последующего расчета ошибки прогноза. На рисунке \ref{fig:macro.plot} представлены ряды из макроэкономического набора после всех преобразований.
%%%%%%%%%%%%%% РИСУНОК 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<mplots, echo = FALSE>>=
#colnames(macro) <- m.names
df.macro <- data.frame(macro)
df.macro$date <- as.yearmon(index(macro)) 
df.macro.melt <- melt(df.macro, id.vars = 'date')
@
<<macro.plot, echo = FALSE, fig.height=7, fig.width=12, fig.cap='Макроэкономические данные после преобразований', fig.lp='fig:'>>=
ggplot(df.macro.melt, aes(x = date, y = value)) +
    geom_line() +
    facet_wrap(~ variable, scales = 'free_y', ncol = 3)+
    ylab(" ")+
    xlab("Дата")+
    theme(axis.title.x = element_text(size=22),
          axis.title.y = element_text(size=22),
          plot.title = element_text(size = 22))
@

<<download fin data, echo = FALSE>>=
fin.raw <- read.csv('./Data/Finance.csv', sep = ";")
Date <- as.Date(fin.raw$Date, "%d.%m.%Y")
fin.raw <- zoo(fin.raw[,-1], order.by = Date)
@
<<Transform fin, echo = FALSE>>=
na.count <- rep(0, ncol(fin.raw))
for(j in 1:ncol(fin.raw)){
  na.count[j] <- sum(is.na(fin.raw[,j]))
}
cut <- max(na.count)

stocks.raw <- fin.raw[-(1:cut),]
stocks <- array(dim = c(nrow(stocks.raw)-1,ncol(stocks.raw)), dimnames = list(NULL, colnames(stocks.raw)))
attr(stocks, "center") <- rep(NA, ncol(stocks.raw))
attr(stocks, "scale") <- rep(NA, ncol(stocks.raw))

for (i in 1:ncol(stocks.raw)){
  temp <-  diff(stocks.raw[,i])
  temp <- TransformData(temp, season = FALSE, diff = FALSE)
  attr(stocks, 'center')[i] <- attr(temp, 'scaled:center')
  attr(stocks, 'scale')[i] <- attr(temp, 'scaled:scale')
  stocks[,i] <- temp
}
attr(stocks, "n.dif") <- rep(1, ncol(stocks.raw))
stocks.zoo <- zoo(stocks, order.by = index(stocks.raw[-1]))

f.names <- c("Сбербанк", "ВТБ", "Открытие","АВТОВАЗ","КАМАЗ","СОЛЛЕРС",
                           "Норникель","Полюс","Северсталь","Роснефть","Газпром",
                           "Лукойл","Магнит","Лента","М.Видео","МТС","Мегафон",
                           "Ростелеком","Уралкалий","Фосагро","Акрон",
                           "Интер РАО","РусГидро","ФСК ЕЭС")
@

Второй набор данных, который условно был назван финансовым, состоит из 24 временных рядов, каждый из которых представляет собой дневные цены акций крупнейших российских компаний, торгующихся на Московской бирже. В выборку включены данные за период с 7 марта 2014 по 20 апреля 2017 восьми различных индустрий: банки и финансы, машиностроение, металлы и добыча, нефть и газ, потребительские товары, телекоммуникации, химическое производство и электроэнергетика. Внутри каждой индустрии было выбрано 3 компании с наибольшей рыночной капитализацией, торгующиеся на рынке не менее трех лет. Второе условие было введено, чтобы иметь достаточное число наблюдений для построения моделей. В таблице \ref{table:fin} представлен полный список выбранных компаний.  Из 815 доступных наблюдений, 555 наблюдений вошли в тренировочную выборку, а 260 --- в тестовую. 

Как и в случае с макроэкономическими данными, при построении моделей использовались модифицированные ряды. Во-первых, все цены были преобразованы в приросты цен, то есть была взята первая разность. Во-вторых, данные были приведены к единому масштабу при помощи преобразования \eqref{scale}. Итоговые прогнозы, качество которых сравнивалось для различных моделей, представляли собой приросты цен, которым был возвращён исходный масштаб. На рисунке \ref{fig:one.industry.plots} показаны временные ряды из отрасли банков и финансов до и после трансформации.
%%%%%%%%%%%%%% РИСУНОК 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<one industry, echo = FALSE>>=
df.raw <- data.frame(stocks.raw[-1, 1:3])
colnames(df.raw) <- f.names[1:3]
df.raw$date <- index(stocks.zoo)
df.raw.melt = melt(df.raw, id.vars = 'date')
f1 <- ggplot(df.raw.melt, aes(x = date, y = value)) +
    geom_line() +
    facet_wrap(~ variable, scales = 'free_y', ncol = 1)+
    ylab("Цена")+
    theme(axis.title.x = element_text(size=14),
          axis.title.y = element_text(size=14))


df <- data.frame(stocks[, 1:3])
colnames(df) <- c("Сбербанк", "ВТБ", "Открытие")
df$date <- index(stocks.zoo)
df.melt <-  melt(df, id.vars = 'date')
f2 <- ggplot(df.melt, aes(x = date, y = value)) +
    geom_line() +
    facet_wrap(~ variable, scales = 'free_y', ncol = 1)+
    ylab("Модифицированная цена")+
    theme(axis.title.x = element_text(size=14),
          axis.title.y = element_text(size=14))
@
<<one.industry.plots, echo = FALSE, fig.height=7, fig.width=12, fig.cap='Акции индустрии банки и финансы до и после преобразований', fig.lp='fig:', fig.pos='h'>>=
grid.arrange(f1,f2,ncol = 2, nrow = 1)
@
